name: Terraform Plan
on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: "write"
  id-token: "write"
  pull-requests: "write"
  issues: "write"

jobs:
  tf_plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.1
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN }}

      - uses: actions/checkout@v3

      - name: Terraform fmt
        run: terraform fmt -check
        working-directory: "./terraform"

      - run: terraform init
        working-directory: "./terraform"

      - name: Terraform validate
        run: terraform validate -no-color
        working-directory: "./terraform"

      - name: Setup env
        run: |
          env_json=$(echo "${SECRETS}" | jq -r 'to_entries | .[] | @json')
          for i in ${env_json}; do
          env_key=$(echo "$i" | jq -r '.key')
          env_value=$(echo "$i" | jq -r '.value')
          echo "TF_VAR_${env_key,,}=${env_value}" >>"$GITHUB_ENV"
          done
        env:
          SECRETS: ${{ toJson(secrets) }}

      - name: Terraform plan for resources change
        id: tf_plan
        run: terraform plan -input=false -no-color -lock-timeout=10m
        working-directory: "./terraform"

      - name: Comment result to Pull Request
        uses: SoaB1/terraform-pr-commenter@v1.6.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.tf_plan.outputs.stdout, steps.tf_plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.tf_plan.outputs.exitcode }}
